#include <stdio.h>
#include <stdlib.h>
#include "../include/libsisop.h"

#define handle_error(msg) \
           do { perror(msg); exit(EXIT_FAILURE); } while (0)

#define debug(msg) printf(msg);printf("\n")

void *func2(void *arg);

void *func1(void *arg)
{
    int i, pid2;
    printf("func1: started\n");
    printf("func1: %d\n",*(int*)arg);
    
    pid2 = mproc_create(func2, NULL);
    if (pid2==-1 )
	handle_error("Erro ao criar processo");
      
    for (i=0; i<5; i++) {
	printf ("func1 i = %d\n",i);
        mproc_yield();
    }

    mproc_join(pid2);

    printf("func1: %d - returning\n",*(int*)arg);
    return NULL;
}

void *func2(void *arg)
{
    int i;
    printf("func2: started\n");
    for (i=0; i<10; i++) {
	printf ("func2 i = %d \n",i);
        mproc_yield();
    }
    printf("func2:  returning\n");
    return NULL;
}



int main(void)
{      
    int arg=199, pid1;
    libsisop_init();    
    
    pid1 = mproc_create(func1,&arg);
 
    if (pid1==-1 )
	handle_error("Erro ao criar processo");
    
    mproc_join(pid1);
        
    printf("main: exiting\n");
    return 0;
}

